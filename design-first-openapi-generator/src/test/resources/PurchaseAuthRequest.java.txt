/*
 * txproc-design-first-openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.schlau.pesche.apidocs.openapi.designfirst.generated.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import ch.schlau.pesche.apidocs.openapi.designfirst.generated.model.EmvTags;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Request for authorizing a Purchase
 */
@JsonPropertyOrder({
  PurchaseAuthRequest.JSON_PROPERTY_EMV_TAGS,
  PurchaseAuthRequest.JSON_PROPERTY_PAN,
  PurchaseAuthRequest.JSON_PROPERTY_UUID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class PurchaseAuthRequest {
  public static final String JSON_PROPERTY_EMV_TAGS = "emvTags";
  private EmvTags emvTags;

  public static final String JSON_PROPERTY_PAN = "pan";
  private ch.schlau.pesche.apidocs.openapi.designfirst.txproc.model.Pan pan;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public PurchaseAuthRequest() { 
  }

  public PurchaseAuthRequest emvTags(EmvTags emvTags) {
    this.emvTags = emvTags;
    return this;
  }

   /**
   * Get emvTags
   * @return emvTags
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_EMV_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmvTags getEmvTags() {
    return emvTags;
  }


  @JsonProperty(JSON_PROPERTY_EMV_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmvTags(EmvTags emvTags) {
    this.emvTags = emvTags;
  }


  public PurchaseAuthRequest pan(ch.schlau.pesche.apidocs.openapi.designfirst.txproc.model.Pan pan) {
    this.pan = pan;
    return this;
  }

   /**
   * Get pan
   * @return pan
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_PAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ch.schlau.pesche.apidocs.openapi.designfirst.txproc.model.Pan getPan() {
    return pan;
  }


  @JsonProperty(JSON_PROPERTY_PAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPan(ch.schlau.pesche.apidocs.openapi.designfirst.txproc.model.Pan pan) {
    this.pan = pan;
  }


  public PurchaseAuthRequest uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique ID of the request
   * @return uuid
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  /**
   * Return true if this PurchaseAuthRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseAuthRequest purchaseAuthRequest = (PurchaseAuthRequest) o;
    return Objects.equals(this.emvTags, purchaseAuthRequest.emvTags) &&
        Objects.equals(this.pan, purchaseAuthRequest.pan) &&
        Objects.equals(this.uuid, purchaseAuthRequest.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emvTags, pan, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseAuthRequest {\n");
    sb.append("    emvTags: ").append(toIndentedString(emvTags)).append("\n");
    sb.append("    pan: ").append(toIndentedString(pan)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

