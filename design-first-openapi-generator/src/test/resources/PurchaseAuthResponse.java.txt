/*
 * apidocs-design-first-openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.schlau.pesche.apidocs.openapi.designfirst.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Response to PurchaseAuthRequest
 */
@ApiModel(description = "Response to PurchaseAuthRequest")
@JsonPropertyOrder({
  PurchaseAuthResponse.JSON_PROPERTY_APPROVAL_CODE,
  PurchaseAuthResponse.JSON_PROPERTY_RESULT
})

public class PurchaseAuthResponse {
  public static final String JSON_PROPERTY_APPROVAL_CODE = "approvalCode";
  private String approvalCode;

  /**
   * Result of the request
   */
  public enum ResultEnum {
    OK("OK"),
    
    WRONG("WRONG");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  private ResultEnum result;


  public PurchaseAuthResponse approvalCode(String approvalCode) {
    
    this.approvalCode = approvalCode;
    return this;
  }

   /**
   * Code referencing the successful authorization
   * @return approvalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code referencing the successful authorization")
  @JsonProperty(JSON_PROPERTY_APPROVAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApprovalCode() {
    return approvalCode;
  }



  public void setApprovalCode(String approvalCode) {
    this.approvalCode = approvalCode;
  }


  public PurchaseAuthResponse result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * Result of the request
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Result of the request")
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultEnum getResult() {
    return result;
  }



  public void setResult(ResultEnum result) {
    this.result = result;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseAuthResponse purchaseAuthResponse = (PurchaseAuthResponse) o;
    return Objects.equals(this.approvalCode, purchaseAuthResponse.approvalCode) &&
        Objects.equals(this.result, purchaseAuthResponse.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvalCode, result);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseAuthResponse {\n");
    sb.append("    approvalCode: ").append(toIndentedString(approvalCode)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

